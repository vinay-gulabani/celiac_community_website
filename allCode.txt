AboutCeliac.jsx:

import React from 'react';
import './AboutCeliac.css';

function AboutCeliac() {
  return (
    <section className="about-celiac">
      <h2>What is Celiac Disease?</h2>
      <div className="about-celiac-content">
        <img 
          src="/images/quote_of_the_day.png" 
          alt="Celiac Disease illustration" 
          className="celiac-image" 
        />
        <div className="celiac-text">
          <p>
            Celiac disease is a genetic autoimmune disorder that affects both children and adults.
            When people with celiac disease consume gluten, their immune system responds by
            damaging the small intestine, leading to various health complications.
          </p>
          <button className="learn-more-button" onClick={() => window.location.href = '/about'}>
            Learn more about celiac disease
          </button>
        </div>
      </div>
    </section>
  );
}

export default AboutCeliac;


AboutCeliac.css:

.about-celiac {
    text-align: center;
    padding: 2rem;
  }
  
  .about-celiac-content {
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  
  .celiac-image {
    max-width: 80%; /* Adjust size as needed */
    height: auto;
    margin-bottom: 1rem;
  }
  
  .celiac-text {
    max-width: 600px; /* Limit text width for readability */
    margin-top: 1rem;
  }
  
  .learn-more-button {
    padding: 0.8rem 1.2rem;
    background-color: #ec6363; /* Example button color */
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 1rem;
    margin-top: 1rem;
    transition: background-color 0.3s;
  }
  
  .learn-more-button:hover {
    background-color: #e04d4d; /* Slightly darker on hover */
  }
  

  CeliacDigest.jsx:

  import React from 'react';
import './CeliacDigest.css';

function CeliacDigest() {
  // Sample blog post data with images
  
  const blogPosts = [
    {
      title: "Celiac Disease in Children",
      description: "Learn how to spot the signs and symptoms in kids.",
      link: "/blog/celiac-disease-in-children",
      image: "/images/quote_of_the_day.png", // Replace with the actual path or URL
    },
    {
      title: "Gluten-Free Diet: What You Need to Know",
      description: "Discover the ins and outs of a gluten-free diet.",
      link: "/blog/gluten-free-diet",
      image: "/images/quote_of_the_day.png",
    },
    {
      title: "Celiac Disease and Mental Health",
      description: "Uncover the link between celiac disease and mental well-being.",
      link: "/blog/celiac-disease-mental-health",
      image: "/images/quote_of_the_day.png",
    },
  ];

  return (
    <div className="celiac-digest">
      <h2>Celiac Digest</h2>
      <div className="digest-items">
        {blogPosts.map((post, index) => (
          <div className="digest-item" key={index}>
            <h3>{post.title}</h3>
            <img src={post.image} alt={post.title} className="digest-image" />
            <p>{post.description}</p>
            <a href={post.link} className="read-more">
              Read more
            </a>
          </div>
        ))}
      </div>
    </div>
  );
}

export default CeliacDigest;



CeliacDigest.css:

.celiac-digest {
    padding: 20px;
    background-color: #f7f7f7;
    border-radius: 8px;
    margin-top: 20px;
}

.celiac-digest h2 {
    font-size: 1.8em;
    color: #333;
    margin-bottom: 15px;
}

.digest-items {
    display: grid;
    grid-template-columns: repeat(3, 1fr); /* 3 columns */
    gap: 15px;
}

.digest-item {
    background-color: #fff;
    padding: 15px;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
}

.digest-item h3 {
    font-size: 1.2em;
    color: #333;
}

.digest-image {
    width: 100%;
    height: auto;
    border-radius: 8px;
    margin: 10px 0;
}

.digest-item p {
    color: #666;
    margin: 8px 0;
}

.read-more {
    display: inline-block;
    padding: 10px 20px;
    background-color: #ec6363;
    color: #fff;
    border: none;
    border-radius: 4px;
    font-weight: bold;
    cursor: pointer;
    text-align: center;
    transition: background-color 0.3s ease;
    margin-top: 10px;
    text-decoration: none;
}

.read-more:hover {
    background-color: #e04d4d;
}

/* Responsive adjustments */
@media (max-width: 768px) {
    .digest-items {
        grid-template-columns: repeat(2, 1fr); /* 2 columns on medium screens */
    }
}

@media (max-width: 480px) {
    .digest-items {
        grid-template-columns: 1fr; /* 1 column on small screens */
    }
}



Dashboard.jsx:

import React from 'react';

function Dashboard() {
  return <div>Welcome to your Dashboard!</div>;
}

export default Dashboard;



Footer.jsx:

import React from 'react';
import './Footer.css';
import '@fortawesome/fontawesome-free/css/all.min.css';

function Footer() {
  return (
    <footer className="footer">
      {/* Top Row */}
      <div className="footer-top">
        <div className="footer-section links-section">
          <button onClick={() => window.location.href = "/contact"}>Contact</button>
          <button onClick={() => window.location.href = "/privacy"}>Privacy Policy</button>
          <button onClick={() => window.location.href = "/terms"}>Terms of Service</button>
        </div>

        <div className="footer-section social-section">
          <a href="https://facebook.com" target="_blank" rel="noopener noreferrer">
            <i className="fab fa-facebook-f"></i>
          </a>
          <a href="https://twitter.com" target="_blank" rel="noopener noreferrer">
            <i className="fab fa-twitter"></i>
          </a>
          <a href="https://instagram.com" target="_blank" rel="noopener noreferrer">
            <i className="fab fa-instagram"></i>
          </a>
        </div>
      </div>

      {/* Bottom Row */}
      <div className="footer-bottom">
        <p>&copy; 2024 Celiac Community. A platform dedicated to supporting and connecting those with celiac disease.</p>
        <p>All rights reserved.</p>
      </div>
    </footer>
  );
}

export default Footer;


Footer.css:

.footer {
  background-color: #f7f7f7;
  color: #333;
  border-top: 1px solid #ddd;
  padding: 20px 40px;
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: 15px;
}

/* Top Row: Links & Social Media */
.footer-top {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  max-width: 900px;
  margin: 0 auto;
}

/* Links Section */
.links-section {
  display: flex;
  gap: 15px; /* Space between links */
}

.links-section button {
  background: none;
  border: none;
  color: #333;
  font-size: 1em;
  cursor: pointer;
  padding: 5px;
  transition: color 0.3s ease;
}

.links-section button:hover {
  color: #007bff; /* Subtle hover effect */
  text-decoration: underline;
}

/* Social Media Icons */
.social-section {
  display: flex;
  gap: 15px; /* Space between icons */
}

.social-section a {
  font-size: 1.5em;
  color: #333;
  text-decoration: none;
  transition: color 0.3s ease, transform 0.3s ease;
}

.social-section a:hover {
  color: #007bff;
  transform: scale(1.1); /* Subtle hover effect */
}

/* Bottom Row: Centered Text */
.footer-bottom {
  text-align: center;
  font-size: 0.9em;
}

/* Responsive Design */
@media (max-width: 768px) {
  .footer-top {
    flex-direction: column;
    align-items: center;
    gap: 15px; /* Add spacing between sections */
  }

  .links-section, .social-section {
    justify-content: center;
  }
}



Header.jsx:

import React, { useState } from 'react';
import './Header.css';

function Header() {
  const [isNavOpen, setIsNavOpen] = useState(false);

  // Toggle navigation menu on mobile
  const toggleNav = () => {
    setIsNavOpen(!isNavOpen);
  };

  return (
    <header className="header">
      <div className="app-title">Celiac Community</div>
      
      <nav className="navbar">
        {/* Hamburger Button */}
        <button className="nav-button" onClick={toggleNav}>
          &#9776; {/* Unicode for hamburger icon */}
        </button>

        {/* Navigation Links */}
        <ul className={`nav-links ${isNavOpen ? 'show' : ''}`}>
          <li><button onClick={() => { /* Handle navigation */ }}>Home</button></li>
          <li><button onClick={() => { /* Handle navigation */ }}>About</button></li>
          <li><button onClick={() => { /* Handle navigation */ }}>Blog</button></li>
          <li><button onClick={() => { /* Handle navigation */ }}>Contact</button></li>
        </ul>
      </nav>
    </header>
  );
}

export default Header;



Header.css:

/* Header Container */
.header {
  display: flex;
  justify-content: space-between; /* Ensures the title and nav bar are on the same line */
  align-items: center;
  padding: 10px 20px;
  background-color: #f7f7f7; /* Light gray as before */
  color: #333; /* Dark text for contrast */
  position: sticky;
  top: 0;
  z-index: 1000;
  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
}

/* Title Styling */
.app-title {
  font-size: 1.8em;
  font-weight: bold;
  margin: 0;
}

/* Navigation Bar */
.navbar {
  display: flex;
  align-items: center;
  gap: 20px; /* Spacing between nav links */
}

/* Navigation Links */
.nav-links {
  display: flex;
  list-style: none;
  gap: 20px;
  transition: all 0.3s ease-in-out;
}

.nav-links li {
  display: inline-block;
}

/* Navigation Buttons */
.nav-links button {
  background: none;
  border: none;
  color: #333; /* Dark text color */
  font-size: 1em;
  cursor: pointer;
  padding: 10px 15px;
  border-radius: 4px;
  transition: background-color 0.3s ease-in-out;
}

.nav-links button:hover {
  background-color: rgba(0, 0, 0, 0.1); /* Subtle hover effect */
}

/* Hamburger Button (hidden on larger screens) */
.nav-button {
  display: none;
  background: none;
  border: none;
  color: #333; /* Same as text color */
  font-size: 1.5em;
  cursor: pointer;
}

/* Responsive Styling */
@media (max-width: 768px) {
  /* Hide nav links by default on smaller screens */
  .nav-links {
    display: none;
    flex-direction: column;
    position: absolute;
    top: 60px;
    right: 10px;
    background-color: #f7f7f7;
    border-radius: 8px;
    padding: 10px;
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
  }

  .nav-links.show {
    display: flex; /* Show links when menu is toggled */
  }

  .nav-links button {
    margin: 5px 0;
  }

  .nav-button {
    display: block; /* Show hamburger button on mobile */
  }
}



Homepage.jsx:

import React from 'react';
import Header from './Header';
import Quote from './Quote';
import CeliacDigest from './CeliacDigest';
import AboutCeliac from './AboutCeliac';
import Footer from './Footer'; // Import the Footer component

function Homepage() {
  return (
    <div>
      <Header />
      
      <section>
        <h2>Quote of the Day</h2>
        <Quote />
      </section>

      <AboutCeliac /> {/* Add the AboutCeliac component here */}

      <section>
        <CeliacDigest />
      </section>

      <Footer /> {/* Add Footer component at the bottom */}
    </div>
  );
}

export default Homepage;


Login.jsx:

import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom'; // Import useNavigate
import { auth } from '../firebase/firebaseConfig';
import { signInWithEmailAndPassword } from 'firebase/auth';

function Login() {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [error, setError] = useState('');
  const navigate = useNavigate(); // Initialize useNavigate

  const handleLogin = async (e) => {
    e.preventDefault();
    try {
      await signInWithEmailAndPassword(auth, email, password);
      alert('Login successful!');
      navigate('/dashboard'); // Redirect to the dashboard after login
    } catch (error) {
      setError(error.message);
    }
  };

  return (
    <div>
      <h2>Login</h2>
      <form onSubmit={handleLogin}>
        <input
          type="email"
          placeholder="Email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          required
        />
        <input
          type="password"
          placeholder="Password"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          required
        />
        <button type="submit">Login</button>
      </form>
      {error && <p>{error}</p>}
    </div>
  );
}

export default Login;



Login.css:




SignUp.jsx:

import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom'; // Import useNavigate
import { auth } from '../firebase/firebaseConfig';
import { createUserWithEmailAndPassword } from 'firebase/auth';

function SignUp() {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [error, setError] = useState('');
  const navigate = useNavigate(); // Initialize useNavigate

  const handleSignUp = async (e) => {
    e.preventDefault();
    try {
      await createUserWithEmailAndPassword(auth, email, password);
      alert('User registered successfully!');
      navigate('/dashboard'); // Redirect to the dashboard after sign-up
    } catch (error) {
      setError(error.message);
    }
  };

  return (
    <div>
      <h2>Sign Up</h2>
      <form onSubmit={handleSignUp}>
        <input
          type="email"
          placeholder="Email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          required
        />
        <input
          type="password"
          placeholder="Password"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          required
        />
        <button type="submit">Sign Up</button>
      </form>
      {error && <p>{error}</p>}
    </div>
  );
}

export default SignUp;



SignUp.css:





Quote.jsx:

import React, { useEffect, useState } from 'react';
import quotes from '../data/quotes.json';

function Quote() {
  const [quote, setQuote] = useState('');

  useEffect(() => {
    // Pick a random quote from the JSON file
    const randomQuote = quotes[Math.floor(Math.random() * quotes.length)];
    setQuote(randomQuote);
  }, []);

  return (
    <div className="quote">
      <p>{quote}</p>
    </div>
  );
}

export default Quote;




Quote.css:

/* Quote.css */
.quote-container {
    background-color: #FFDDD2; /* Soft peach for a gentle background */
    color: #4A4A4A; /* Soft dark gray for text */
    padding: 15px 20px;
    border-radius: 8px;
    margin: 20px;
    text-align: center;
  }
  
  .quote-text {
    font-size: 18px;
    font-style: italic;
  }
  .quote {
    text-align: center;
    font-size: 1.2em;
    color: #333;
  }



  ProtectedRoute.jsx:

  import React from 'react';
import { Navigate } from 'react-router-dom';
import { auth } from '../firebase/firebaseConfig'; // Adjust this path to your Firebase config

function ProtectedRoute({ children }) {
  const user = auth.currentUser;
  return user ? children : <Navigate to="/login" />;
}

export default ProtectedRoute;



App.js:

import React from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import Homepage from './components/Homepage'; // Your main landing page
import Login from './components/Login'; // Login page
import SignUp from './components/SignUp'; // Signup page
import Dashboard from './components/Dashboard'; // Dashboard (protected)
import ProtectedRoute from './components/ProtectedRoute'; // Wrapper for protected pages

import './App.css';

function App() {
  return (
    <Router>
      <Routes>
        {/* Public Routes */}
        <Route path="/" element={<Homepage />} />
        <Route path="/login" element={<Login />} />
        <Route path="/signup" element={<SignUp />} />

        {/* Protected Routes */}
        <Route
          path="/dashboard"
          element={
            <ProtectedRoute>
              <Dashboard />
            </ProtectedRoute>
          }
        />
      </Routes>
    </Router>
  );
}

export default App;



App.css:

@import "~@fortawesome/fontawesome-free/css/all.min.css";


.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}



index.js:


import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();



index.css:

@import "~@fortawesome/fontawesome-free/css/all.min.css";


body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}


firebaseConfig.js:

// src/firebase/firebaseConfig.js
import { initializeApp } from "firebase/app";
import { getAuth } from "firebase/auth";

const firebaseConfig = {
    apiKey: "AIzaSyAoogjReqaiVurHoUc0a9GJw-JYTmh0klw",
    authDomain: "celiac-community.firebaseapp.com",
    projectId: "celiac-community",
    storageBucket: "celiac-community.firebasestorage.app",
    messagingSenderId: "199525229209",
    appId: "1:199525229209:web:cb48f1fcca00d100768e08",
    measurementId: "G-BQZJWJS416"
  };

const app = initializeApp(firebaseConfig);
export const auth = getAuth(app);


